{"ast":null,"code":"import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport logout from \"./screens/logout\";\nimport An from \"./An\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nimport ChatBot from \"./screens/ChatBot\";\nimport Chat from \"./screens/Chat\";\nimport Maps from \"./screens/Maps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction MyDrawer() {\n  console.log('oakahd');\n  return _jsxs(Drawer.Navigator, {\n    children: [_jsx(Drawer.Screen, {\n      options: {\n        headerShown: true\n      },\n      name: \"An\",\n      component: An\n    }), _jsx(Drawer.Screen, {\n      options: {\n        headerShown: true\n      },\n      name: \"ChatBot\",\n      component: ChatBot\n    }), _jsx(Drawer.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"logout\",\n      component: logout\n    }), _jsx(Drawer.Screen, {\n      options: {\n        headerShown: true\n      },\n      name: \"ChatScreen\",\n      component: Chat\n    }), _jsx(Drawer.Screen, {\n      options: {\n        headerShown: true\n      },\n      name: \"Map\",\n      component: Maps\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: true\n        },\n        name: \"MyDashboard\",\n        component: MyDrawer\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","createDrawerNavigator","NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","logout","An","Stack","Drawer","ChatBot","Chat","Maps","MyDrawer","console","log","headerShown","App","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/reactag/newstart3/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport logout from './screens/logout';\nimport An from './An'\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\nimport ChatBot from './screens/ChatBot';\nimport Chat from './screens/Chat';\nimport Maps from './screens/Maps';\n\n\nfunction MyDrawer() {\n  console.log('oakahd')\n  return (\n\n    <Drawer.Navigator >\n      <Drawer.Screen options={{ headerShown: true }} name=\"An\" component={An} />\n      <Drawer.Screen options={{ headerShown: true }} name=\"ChatBot\" component={ChatBot} />\n      <Drawer.Screen options={{ headerShown: false }} name=\"logout\" component={logout} />\n      <Drawer.Screen options={{ headerShown: true }} name=\"ChatScreen\" component={Chat} />\n      <Drawer.Screen options={{ headerShown: true }} name=\"Map\" component={Maps} />\n\n\n\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={LoginScreen} />\n        <Stack.Screen options={{ headerShown: true }} name=\"MyDashboard\" component={MyDrawer} />\n\n\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":"AAAA,OAAO,8BAA8B;AACrC,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAEjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AACb,OAAOC,EAAE;AACT,IAAMC,KAAK,GAAGL,0BAA0B,EAAE;AAC1C,IAAMM,MAAM,GAAGR,qBAAqB,EAAE;AACtC,OAAOS,OAAO;AACd,OAAOC,IAAI;AACX,OAAOC,IAAI;AAAuB;AAAA;AAGlC,SAASC,QAAQ,GAAG;EAClBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,OAEE,MAAC,MAAM,CAAC,SAAS;IAAA,WACf,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAK,CAAE;MAAC,IAAI,EAAC,IAAI;MAAC,SAAS,EAAET;IAAG,EAAG,EAC1E,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAES,WAAW,EAAE;MAAK,CAAE;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEN;IAAQ,EAAG,EACpF,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEM,WAAW,EAAE;MAAM,CAAE;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEV;IAAO,EAAG,EACnF,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEU,WAAW,EAAE;MAAK,CAAE;MAAC,IAAI,EAAC,YAAY;MAAC,SAAS,EAAEL;IAAK,EAAG,EACpF,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEK,WAAW,EAAE;MAAK,CAAE;MAAC,IAAI,EAAC,KAAK;MAAC,SAAS,EAAEJ;IAAK,EAAG;EAAA,EAI5D;AAEvB;AAEA,eAAe,SAASK,GAAG,GAAG;EAC5B,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAA,WACd,KAAC,KAAK,CAAC,MAAM;QAAC,OAAO,EAAE;UAAED,WAAW,EAAE;QAAM,CAAE;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAEZ;MAAY,EAAG,EACtF,KAAC,KAAK,CAAC,MAAM;QAAC,OAAO,EAAE;UAAEY,WAAW,EAAE;QAAK,CAAE;QAAC,IAAI,EAAC,aAAa;QAAC,SAAS,EAAEH;MAAS,EAAG;IAAA;EAIxE,EACE;AAE1B;AAEA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}