{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useCallbackOne, useMemoOne } from 'use-memo-one';\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { TEST_ID } from \"./Constant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 44,\n    justifyContent: 'flex-end'\n  },\n  text: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n    backgroundColor: Color.backgroundTransparent,\n    marginBottom: 12,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});\nexport var Send = function Send(_ref) {\n  var _ref$text = _ref.text,\n    text = _ref$text === void 0 ? '' : _ref$text,\n    containerStyle = _ref.containerStyle,\n    children = _ref.children,\n    textStyle = _ref.textStyle,\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? 'Send' : _ref$label,\n    _ref$alwaysShowSend = _ref.alwaysShowSend,\n    alwaysShowSend = _ref$alwaysShowSend === void 0 ? false : _ref$alwaysShowSend,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    sendButtonProps = _ref.sendButtonProps,\n    _ref$onSend = _ref.onSend,\n    onSend = _ref$onSend === void 0 ? function () {} : _ref$onSend;\n  var handleOnPress = useCallbackOne(function () {\n    if (text && onSend) {\n      onSend({\n        text: text.trim()\n      }, true);\n    }\n  }, [text, onSend]);\n  var showSend = useMemoOne(function () {\n    return alwaysShowSend || text && text.trim().length > 0;\n  }, [alwaysShowSend, text]);\n  if (!showSend) {\n    return null;\n  }\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    testID: TEST_ID.SEND_TOUCHABLE,\n    accessible: true,\n    accessibilityLabel: \"send\",\n    style: [styles.container, containerStyle],\n    onPress: handleOnPress,\n    accessibilityRole: \"button\",\n    disabled: disabled\n  }, sendButtonProps), {}, {\n    children: _jsx(View, {\n      children: children || _jsx(Text, {\n        style: [styles.text, textStyle],\n        children: label\n      })\n    })\n  }));\n};\nSend.propTypes = {\n  text: PropTypes.string,\n  onSend: PropTypes.func,\n  label: PropTypes.string,\n  containerStyle: StylePropType,\n  textStyle: StylePropType,\n  children: PropTypes.element,\n  alwaysShowSend: PropTypes.bool,\n  disabled: PropTypes.bool,\n  sendButtonProps: PropTypes.object\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAWlC,SAASC,cAAc,EAAEC,UAAU,QAAQ,cAAc;AAEzD,OAAOC,KAAK;AAEZ,SAASC,aAAa;AACtB,SAASC,OAAO;AAAoB;AAEpC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;GACjB;EACDC,IAAI,EAAE;IACJC,KAAK,EAAEV,KAAK,CAACW,WAAW;IACxBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAEd,KAAK,CAACe,qBAAqB;IAC5CC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;;CAEhB,CAAC;AAiBF,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAI,OAUS;EAAA,qBATxBV,IAAI;IAAJA,IAAI,0BAAG,EAAE;IACTW,cAAc,QAAdA,cAAc;IACdC,QAAQ,QAARA,QAAQ;IACRC,SAAS,QAATA,SAAS;IAAA,kBACTC,KAAK;IAALA,KAAK,2BAAG,MAAM;IAAA,2BACdC,cAAc;IAAdA,cAAc,oCAAG,KAAK;IAAA,qBACtBC,QAAQ;IAARA,QAAQ,8BAAG,KAAK;IAChBC,eAAe,QAAfA,eAAe;IAAA,mBACfC,MAAM;IAANA,MAAM,4BAAG,YAAK,CAAE,CAAC;EAEjB,IAAMC,aAAa,GAAG9B,cAAc,CAAC,YAAK;IACxC,IAAIW,IAAI,IAAIkB,MAAM,EAAE;MAClBA,MAAM,CAAC;QAAElB,IAAI,EAAEA,IAAI,CAACoB,IAAI;MAAE,CAAuB,EAAE,IAAI,CAAC;;EAE5D,CAAC,EAAE,CAACpB,IAAI,EAAEkB,MAAM,CAAC,CAAC;EAElB,IAAMG,QAAQ,GAAG/B,UAAU,CACzB;IAAA,OAAMyB,cAAc,IAAKf,IAAI,IAAIA,IAAI,CAACoB,IAAI,EAAE,CAACE,MAAM,GAAG,CAAE;EAAA,GACxD,CAACP,cAAc,EAAEf,IAAI,CAAC,CACvB;EAED,IAAI,CAACqB,QAAQ,EAAE;IACb,OAAO,IAAI;;EAGb,OACE,KAAC,gBAAgB;IACf,MAAM,EAAE5B,OAAO,CAAC8B,cAAe;IAC/B,UAAU;IACV,kBAAkB,EAAC,MAAM;IACzB,KAAK,EAAE,CAAC7B,MAAM,CAACG,SAAS,EAAEc,cAAc,CAAE;IAC1C,OAAO,EAAEQ,aAAc;IACvB,iBAAiB,EAAC,QAAQ;IAC1B,QAAQ,EAAEH;EAAS,GACfC,eAAe;IAAA,UAEnB,KAAC,IAAI;MAAA,UACFL,QAAQ,IAAI,KAAC,IAAI;QAAC,KAAK,EAAE,CAAClB,MAAM,CAACM,IAAI,EAAEa,SAAS,CAAE;QAAA,UAAEC;MAAK;IAAQ;EAEtE,GAAmB;AAEvB,CAAC;AAEDJ,IAAI,CAACc,SAAS,GAAG;EACfxB,IAAI,EAAEZ,SAAS,CAACqC,MAAM;EACtBP,MAAM,EAAE9B,SAAS,CAACsC,IAAI;EACtBZ,KAAK,EAAE1B,SAAS,CAACqC,MAAM;EACvBd,cAAc,EAAEnB,aAAa;EAC7BqB,SAAS,EAAErB,aAAa;EACxBoB,QAAQ,EAAExB,SAAS,CAACuC,OAAO;EAC3BZ,cAAc,EAAE3B,SAAS,CAACwC,IAAI;EAC9BZ,QAAQ,EAAE5B,SAAS,CAACwC,IAAI;EACxBX,eAAe,EAAE7B,SAAS,CAACyC;CAC5B","names":["React","PropTypes","useCallbackOne","useMemoOne","Color","StylePropType","TEST_ID","styles","StyleSheet","create","container","height","justifyContent","text","color","defaultBlue","fontWeight","fontSize","backgroundColor","backgroundTransparent","marginBottom","marginLeft","marginRight","Send","containerStyle","children","textStyle","label","alwaysShowSend","disabled","sendButtonProps","onSend","handleOnPress","trim","showSend","length","SEND_TOUCHABLE","propTypes","string","func","element","bool","object"],"sources":["../src/Send.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}