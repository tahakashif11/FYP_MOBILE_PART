{"ast":null,"code":"export default function getDrawerStatusFromState(state) {\n  var _ref, _ref2;\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n  var entry = state.history.find(function (it) {\n    return it.type === 'drawer';\n  });\n  return (_ref = (_ref2 = entry === null || entry === void 0 ? void 0 : entry.status) != null ? _ref2 : state.default) != null ? _ref : 'closed';\n}","map":{"version":3,"mappings":"AAMA,eAAe,SAASA,wBAAwB,CAC9CC,KAA2C,EAC7B;EAAA;EACd,IAAIA,KAAK,CAACC,OAAO,IAAI,IAAI,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,sGAAsG,CACvG;EACH;EAEA,IAAMC,KAAK,GAAGH,KAAK,CAACC,OAAO,CAACG,IAAI,CAAEC,YAAE;IAAA,OAAKA,EAAE,CAACC,IAAI,KAAK,QAAQ;EAAA,EAEhD;EAEb,wBAAOH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,MAAM,oBAAIP,KAAK,CAACQ,OAAO,mBAAI,QAAQ;AACnD","names":["getDrawerStatusFromState","state","history","Error","entry","find","it","type","status","default"],"sources":["C:\\reactag\\newstart3\\node_modules\\@react-navigation\\drawer\\src\\utils\\getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}