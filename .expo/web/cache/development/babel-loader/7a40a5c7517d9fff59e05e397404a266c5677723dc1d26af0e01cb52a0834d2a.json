{"ast":null,"code":"import { useRef } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar now = function now() {\n  return +new Date();\n};\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar INIT_POSITION = {\n  x: 0,\n  y: 0\n};\nexport var useGesture = function useGesture(_ref) {\n  var _ref$doubleTapGapTime = _ref.doubleTapGapTimer,\n    doubleTapGapTimer = _ref$doubleTapGapTime === void 0 ? 500 : _ref$doubleTapGapTime,\n    _ref$doubleTapAnimati = _ref.doubleTapAnimationDuration,\n    doubleTapAnimationDuration = _ref$doubleTapAnimati === void 0 ? 100 : _ref$doubleTapAnimati,\n    _ref$doubleTapZoomEna = _ref.doubleTapZoomEnabled,\n    doubleTapZoomEnabled = _ref$doubleTapZoomEna === void 0 ? true : _ref$doubleTapZoomEna,\n    doubleTapCallback = _ref.doubleTapCallback,\n    doubleTapZoomToCenter = _ref.doubleTapZoomToCenter,\n    _ref$doubleTapMaxZoom = _ref.doubleTapMaxZoom,\n    doubleTapMaxZoom = _ref$doubleTapMaxZoom === void 0 ? 2 : _ref$doubleTapMaxZoom,\n    _ref$doubleTapInitial = _ref.doubleTapInitialScale,\n    doubleTapInitialScale = _ref$doubleTapInitial === void 0 ? 1 : _ref$doubleTapInitial,\n    _ref$doubleTapZoomSte = _ref.doubleTapZoomStep,\n    doubleTapZoomStep = _ref$doubleTapZoomSte === void 0 ? 0.5 : _ref$doubleTapZoomSte,\n    _ref$UNSAFE_INNER_WID = _ref.UNSAFE_INNER_WIDTH__cropWidth,\n    UNSAFE_INNER_WIDTH__cropWidth = _ref$UNSAFE_INNER_WID === void 0 ? width : _ref$UNSAFE_INNER_WID,\n    _ref$UNSAFE_INNER_WID2 = _ref.UNSAFE_INNER_WIDTH__cropHeight,\n    UNSAFE_INNER_WIDTH__cropHeight = _ref$UNSAFE_INNER_WID2 === void 0 ? height : _ref$UNSAFE_INNER_WID2,\n    _ref$longPressGapTime = _ref.longPressGapTimer,\n    longPressGapTimer = _ref$longPressGapTime === void 0 ? 2000 : _ref$longPressGapTime,\n    longPressCallback = _ref.longPressCallback,\n    useNativeDriver = _ref.useNativeDriver;\n  var lastTapTimer = useRef(0);\n  var longPressTimer = useRef();\n  var isDoubleTaped = useRef(false);\n  var isLongPressed = useRef(false);\n  var coordinates = useRef(INIT_POSITION);\n  var doubleTapScale = useRef(doubleTapInitialScale);\n  var animatedScale = useRef(new Animated.Value(1));\n  var animatedPositionX = useRef(new Animated.Value(INIT_POSITION.x));\n  var animatedPositionY = useRef(new Animated.Value(INIT_POSITION.y));\n  var animations = useRef();\n  var init = function init() {\n    isDoubleTaped.current = false;\n    isLongPressed.current = false;\n  };\n  var release = function release() {\n    if (longPressTimer.current) clearTimeout(longPressTimer.current);\n  };\n  var onDoubleTap = function onDoubleTap(e, gestureState) {\n    if (gestureState.numberActiveTouches > 1) return;\n    var nowTapTimer = now();\n    if (nowTapTimer - lastTapTimer.current < doubleTapGapTimer) {\n      isDoubleTaped.current = true;\n      lastTapTimer.current = 0;\n      if (doubleTapCallback) doubleTapCallback(e, gestureState);\n      if (!doubleTapZoomEnabled) return;\n      longPressTimer.current && clearTimeout(longPressTimer.current);\n      doubleTapScale.current = doubleTapScale.current + doubleTapInitialScale * doubleTapZoomStep;\n      if (doubleTapScale.current > doubleTapMaxZoom) {\n        doubleTapScale.current = doubleTapInitialScale;\n      }\n      coordinates.current = {\n        x: e.nativeEvent.changedTouches[0].pageX,\n        y: e.nativeEvent.changedTouches[0].pageY\n      };\n      if (doubleTapZoomToCenter) {\n        coordinates.current = {\n          x: UNSAFE_INNER_WIDTH__cropWidth / 2,\n          y: UNSAFE_INNER_WIDTH__cropHeight / 2\n        };\n      }\n      Animated.parallel([Animated.timing(animatedScale.current, {\n        toValue: doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(animatedPositionX.current, {\n        toValue: (UNSAFE_INNER_WIDTH__cropWidth / 2 - coordinates.current.x) * (doubleTapScale.current - doubleTapInitialScale) / doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(animatedPositionY.current, {\n        toValue: (UNSAFE_INNER_WIDTH__cropHeight / 2 - coordinates.current.y) * (doubleTapScale.current - doubleTapInitialScale) / doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      })]).start();\n      animations.current = {\n        transform: [{\n          scale: animatedScale.current\n        }, {\n          translateX: animatedPositionX.current\n        }, {\n          translateY: animatedPositionY.current\n        }]\n      };\n    } else {\n      lastTapTimer.current = nowTapTimer;\n    }\n  };\n  var onLongPress = function onLongPress(e, gestureState) {\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n    longPressTimer.current = setTimeout(function () {\n      isLongPressed.current = true;\n      if (longPressCallback) {\n        longPressCallback(e, gestureState);\n      }\n    }, longPressGapTimer);\n  };\n  var reset = function reset() {\n    animatedScale.current.setValue(doubleTapInitialScale);\n    animatedPositionX.current.setValue(INIT_POSITION.x);\n    animatedPositionY.current.setValue(INIT_POSITION.y);\n    animations.current = void 0;\n  };\n  return [{\n    onDoubleTap: onDoubleTap,\n    reset: reset,\n    init: init,\n    release: release,\n    onLongPress: onLongPress,\n    isDoubleTaped: isDoubleTaped.current,\n    isLongPressed: isLongPressed.current\n  }, animations.current];\n};","map":{"version":3,"names":["useRef","now","Date","Dimensions","get","width","height","INIT_POSITION","x","y","useGesture","doubleTapGapTimer","doubleTapAnimationDuration","doubleTapZoomEnabled","doubleTapCallback","doubleTapZoomToCenter","doubleTapMaxZoom","doubleTapInitialScale","doubleTapZoomStep","UNSAFE_INNER_WIDTH__cropWidth","UNSAFE_INNER_WIDTH__cropHeight","longPressGapTimer","longPressCallback","useNativeDriver","lastTapTimer","longPressTimer","isDoubleTaped","isLongPressed","coordinates","doubleTapScale","animatedScale","Animated","Value","animatedPositionX","animatedPositionY","animations","init","current","release","clearTimeout","onDoubleTap","e","gestureState","numberActiveTouches","nowTapTimer","nativeEvent","changedTouches","pageX","pageY","parallel","timing","toValue","duration","start","transform","scale","translateX","translateY","onLongPress","setTimeout","reset","setValue"],"sources":["C:/reactag/newstart3/node_modules/react-native-lightbox-v2/dist/hooks/use-gesture.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { Dimensions, Animated, } from \"react-native\";\n// -------------------------  default vars  ------------------------\nconst now = () => +new Date();\nconst { width, height } = Dimensions.get(\"window\");\nconst INIT_POSITION = { x: 0, y: 0 };\n// -------------------------  hooks  -------------------------\nexport const useGesture = ({ doubleTapGapTimer = 500, doubleTapAnimationDuration = 100, doubleTapZoomEnabled = true, doubleTapCallback, doubleTapZoomToCenter, doubleTapMaxZoom = 2, doubleTapInitialScale = 1, doubleTapZoomStep = 0.5, UNSAFE_INNER_WIDTH__cropWidth = width, UNSAFE_INNER_WIDTH__cropHeight = height, longPressGapTimer = 2000, longPressCallback, \n// longPressToSaveEnable = false,\nuseNativeDriver, }) => {\n    // last tap timer\n    const lastTapTimer = useRef(0);\n    // long press timer\n    const longPressTimer = useRef();\n    // if double taped\n    const isDoubleTaped = useRef(false);\n    // if long pressed\n    const isLongPressed = useRef(false);\n    // double tap coordinates\n    const coordinates = useRef(INIT_POSITION);\n    // double tap scale\n    const doubleTapScale = useRef(doubleTapInitialScale);\n    // animated\n    const animatedScale = useRef(new Animated.Value(1));\n    const animatedPositionX = useRef(new Animated.Value(INIT_POSITION.x));\n    const animatedPositionY = useRef(new Animated.Value(INIT_POSITION.y));\n    // animation style to export\n    const animations = useRef();\n    // init the status\n    const init = () => {\n        isDoubleTaped.current = false;\n        isLongPressed.current = false;\n    };\n    const release = () => {\n        if (longPressTimer.current)\n            clearTimeout(longPressTimer.current);\n    };\n    const onDoubleTap = (e, gestureState) => {\n        if (gestureState.numberActiveTouches > 1)\n            return;\n        const nowTapTimer = now();\n        // double tap\n        if ((nowTapTimer - lastTapTimer.current) < doubleTapGapTimer) {\n            isDoubleTaped.current = true;\n            lastTapTimer.current = 0;\n            // double tap callback\n            if (doubleTapCallback)\n                doubleTapCallback(e, gestureState);\n            // double tap zoom\n            if (!doubleTapZoomEnabled)\n                return;\n            // cancel long press\n            longPressTimer.current && clearTimeout(longPressTimer.current);\n            // next scale\n            doubleTapScale.current = doubleTapScale.current + doubleTapInitialScale * doubleTapZoomStep;\n            if (doubleTapScale.current > doubleTapMaxZoom) {\n                doubleTapScale.current = doubleTapInitialScale;\n            }\n            coordinates.current = {\n                x: e.nativeEvent.changedTouches[0].pageX,\n                y: e.nativeEvent.changedTouches[0].pageY,\n            };\n            if (doubleTapZoomToCenter) {\n                coordinates.current = {\n                    x: UNSAFE_INNER_WIDTH__cropWidth / 2,\n                    y: UNSAFE_INNER_WIDTH__cropHeight / 2,\n                };\n            }\n            Animated.parallel([\n                Animated.timing(animatedScale.current, {\n                    toValue: doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n                Animated.timing(animatedPositionX.current, {\n                    toValue: ((UNSAFE_INNER_WIDTH__cropWidth / 2 - coordinates.current.x) *\n                        (doubleTapScale.current - doubleTapInitialScale)) /\n                        doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n                Animated.timing(animatedPositionY.current, {\n                    toValue: ((UNSAFE_INNER_WIDTH__cropHeight / 2 - coordinates.current.y) *\n                        (doubleTapScale.current - doubleTapInitialScale)) /\n                        doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n            ]).start();\n            animations.current = {\n                transform: [\n                    {\n                        scale: animatedScale.current,\n                    },\n                    {\n                        translateX: animatedPositionX.current,\n                    },\n                    {\n                        translateY: animatedPositionY.current,\n                    },\n                ],\n            };\n        }\n        else {\n            lastTapTimer.current = nowTapTimer;\n        }\n    };\n    const onLongPress = (e, gestureState) => {\n        if (longPressTimer.current) {\n            clearTimeout(longPressTimer.current);\n            longPressTimer.current = null;\n        }\n        longPressTimer.current = setTimeout(() => {\n            isLongPressed.current = true;\n            if (longPressCallback) {\n                longPressCallback(e, gestureState);\n            }\n        }, longPressGapTimer);\n    };\n    // reset\n    const reset = () => {\n        // double tap animations reset\n        animatedScale.current.setValue(doubleTapInitialScale);\n        animatedPositionX.current.setValue(INIT_POSITION.x);\n        animatedPositionY.current.setValue(INIT_POSITION.y);\n        animations.current = void 0;\n    };\n    // todo pinch to zoom\n    return [\n        {\n            onDoubleTap,\n            reset,\n            init,\n            release,\n            onLongPress,\n            isDoubleTaped: isDoubleTaped.current,\n            isLongPressed: isLongPressed.current\n        },\n        animations.current,\n    ];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}