{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from \"./hooks/useUpdateLayoutEffect\";\nimport Color from \"./Color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TypingIndicator = function TypingIndicator(_ref) {\n  var isTyping = _ref.isTyping;\n  var _React$useMemo = React.useMemo(function () {\n      return {\n        yCoords: new Animated.Value(200),\n        heightScale: new Animated.Value(0),\n        marginScale: new Animated.Value(0)\n      };\n    }, []),\n    yCoords = _React$useMemo.yCoords,\n    heightScale = _React$useMemo.heightScale,\n    marginScale = _React$useMemo.marginScale;\n  useUpdateLayoutEffect(function () {\n    if (isTyping) {\n      slideIn();\n    } else {\n      slideOut();\n    }\n  }, [isTyping]);\n  var slideIn = function slideIn() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 0,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 35,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 8,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n  var slideOut = function slideOut() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 200,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n  return _jsx(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateY: yCoords\n      }],\n      height: heightScale,\n      marginBottom: marginScale\n    }],\n    children: isTyping ? _jsx(TypingAnimation, {\n      style: {\n        marginLeft: 6,\n        marginTop: 7.2\n      },\n      dotRadius: 4,\n      dotMargin: 5.5,\n      dotColor: 'rgba(0, 0, 0, 0.38)'\n    }) : null\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginLeft: 8,\n    width: 45,\n    borderRadius: 15,\n    backgroundColor: Color.leftBubbleBackground\n  }\n});\nexport default TypingIndicator;","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAE9B,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,qBAAqB;AAC9B,OAAOC,KAAK;AAAe;AAM3B,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAA2B;EAAA,IAArBC,QAAQ,QAARA,QAAQ;EACjC,qBAA8CL,KAAK,CAACM,OAAO,CACzD;MAAA,OAAO;QACLC,OAAO,EAAE,IAAIC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;QAChCC,WAAW,EAAE,IAAIF,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;QAClCE,WAAW,EAAE,IAAIH,QAAQ,CAACC,KAAK,CAAC,CAAC;OAClC;IAAA,CAAC,EACF,EAAE,CACH;IAPOF,OAAO,kBAAPA,OAAO;IAAEG,WAAW,kBAAXA,WAAW;IAAEC,WAAW,kBAAXA,WAAW;EAUzCT,qBAAqB,CAAC,YAAK;IACzB,IAAIG,QAAQ,EAAE;MACZO,OAAO,EAAE;KACV,MAAM;MACLC,QAAQ,EAAE;;EAEd,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAGd,IAAMO,OAAO,GAAG,SAAVA,OAAO,GAAQ;IACnBJ,QAAQ,CAACM,QAAQ,CAAC,CAChBN,QAAQ,CAACO,MAAM,CAACR,OAAO,EAAE;MACvBS,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE;KAClB,CAAC,EACFT,QAAQ,CAACU,MAAM,CAACR,WAAW,EAAE;MAC3BM,OAAO,EAAE,EAAE;MACXG,QAAQ,EAAE,GAAG;MACbF,eAAe,EAAE;KAClB,CAAC,EACFT,QAAQ,CAACU,MAAM,CAACP,WAAW,EAAE;MAC3BK,OAAO,EAAE,CAAC;MACVG,QAAQ,EAAE,GAAG;MACbF,eAAe,EAAE;KAClB,CAAC,CACH,CAAC,CAACG,KAAK,EAAE;EACZ,CAAC;EAGD,IAAMP,QAAQ,GAAG,SAAXA,QAAQ,GAAQ;IACpBL,QAAQ,CAACM,QAAQ,CAAC,CAChBN,QAAQ,CAACO,MAAM,CAACR,OAAO,EAAE;MACvBS,OAAO,EAAE,GAAG;MACZC,eAAe,EAAE;KAClB,CAAC,EACFT,QAAQ,CAACU,MAAM,CAACR,WAAW,EAAE;MAC3BM,OAAO,EAAE,CAAC;MACVG,QAAQ,EAAE,GAAG;MACbF,eAAe,EAAE;KAClB,CAAC,EACFT,QAAQ,CAACU,MAAM,CAACP,WAAW,EAAE;MAC3BK,OAAO,EAAE,CAAC;MACVG,QAAQ,EAAE,GAAG;MACbF,eAAe,EAAE;KAClB,CAAC,CACH,CAAC,CAACG,KAAK,EAAE;EACZ,CAAC;EACD,OACE,KAAC,QAAQ,CAAC,IAAI;IACZ,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChB;MACEC,SAAS,EAAE,CACT;QACEC,UAAU,EAAEjB;OACb,CACF;MACDkB,MAAM,EAAEf,WAAW;MACnBgB,YAAY,EAAEf;KACf,CACD;IAAA,UAEDN,QAAQ,GACP,KAAC,eAAe;MACd,KAAK,EAAE;QAAEsB,UAAU,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAG,CAAG;MACzC,SAAS,EAAE,CAAE;MACb,SAAS,EAAE,GAAI;MACf,QAAQ,EAAE;IAAsB,EAChC,GACA;EAAI,EACM;AAEpB,CAAC;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTK,UAAU,EAAE,CAAC;IACbI,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE9B,KAAK,CAAC+B;;CAE1B,CAAC;AAEF,eAAe9B,eAAe","names":["React","TypingAnimation","useUpdateLayoutEffect","Color","TypingIndicator","isTyping","useMemo","yCoords","Animated","Value","heightScale","marginScale","slideIn","slideOut","parallel","spring","toValue","useNativeDriver","timing","duration","start","styles","container","transform","translateY","height","marginBottom","marginLeft","marginTop","StyleSheet","create","width","borderRadius","backgroundColor","leftBubbleBackground"],"sourceRoot":"","sources":["../src/TypingIndicator.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}