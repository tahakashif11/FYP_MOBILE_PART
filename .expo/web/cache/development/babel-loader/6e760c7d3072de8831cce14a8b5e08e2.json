{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"onLongPress\", \"onPressIn\", \"onPressOut\", \"to\", \"accessibilityRole\"],\n  _excluded2 = [\"icon\", \"label\", \"labelStyle\", \"to\", \"focused\", \"allowFontScaling\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"style\", \"onPress\", \"pressColor\", \"pressOpacity\", \"testID\", \"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar LinkPressable = function LinkPressable(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    _onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    to = _ref.to,\n    accessibilityRole = _ref.accessibilityRole,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Platform.OS === 'web' && to) {\n    return React.createElement(Link, _extends({}, rest, {\n      to: to,\n      style: [styles.button, style],\n      onPress: function onPress(e) {\n        if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n          e.preventDefault();\n          _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n        }\n      },\n      onLongPress: onLongPress != null ? onLongPress : undefined,\n      onPressIn: onPressIn != null ? onPressIn : undefined,\n      onPressOut: onPressOut != null ? onPressOut : undefined\n    }), children);\n  } else {\n    return React.createElement(PlatformPressable, _extends({}, rest, {\n      accessibilityRole: accessibilityRole,\n      onPress: _onPress\n    }), React.createElement(View, {\n      style: style\n    }, children));\n  }\n};\nexport default function DrawerItem(props) {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var icon = props.icon,\n    label = props.label,\n    labelStyle = props.labelStyle,\n    to = props.to,\n    _props$focused = props.focused,\n    focused = _props$focused === void 0 ? false : _props$focused,\n    allowFontScaling = props.allowFontScaling,\n    _props$activeTintColo = props.activeTintColor,\n    activeTintColor = _props$activeTintColo === void 0 ? colors.primary : _props$activeTintColo,\n    _props$inactiveTintCo = props.inactiveTintColor,\n    inactiveTintColor = _props$inactiveTintCo === void 0 ? Color(colors.text).alpha(0.68).rgb().string() : _props$inactiveTintCo,\n    _props$activeBackgrou = props.activeBackgroundColor,\n    activeBackgroundColor = _props$activeBackgrou === void 0 ? Color(activeTintColor).alpha(0.12).rgb().string() : _props$activeBackgrou,\n    _props$inactiveBackgr = props.inactiveBackgroundColor,\n    inactiveBackgroundColor = _props$inactiveBackgr === void 0 ? 'transparent' : _props$inactiveBackgr,\n    style = props.style,\n    onPress = props.onPress,\n    pressColor = props.pressColor,\n    pressOpacity = props.pressOpacity,\n    testID = props.testID,\n    accessibilityLabel = props.accessibilityLabel,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n    _StyleSheet$flatten$b = _StyleSheet$flatten.borderRadius,\n    borderRadius = _StyleSheet$flatten$b === void 0 ? 4 : _StyleSheet$flatten$b;\n  var color = focused ? activeTintColor : inactiveTintColor;\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  var iconNode = icon ? icon({\n    size: 24,\n    focused: focused,\n    color: color\n  }) : null;\n  return React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, style]\n  }), React.createElement(LinkPressable, {\n    testID: testID,\n    onPress: onPress,\n    style: [styles.wrapper, {\n      borderRadius: borderRadius\n    }],\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    to: to\n  }, React.createElement(React.Fragment, null, iconNode, React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color: color,\n      fontWeight: '500'\n    }, labelStyle]\n  }, label) : label({\n    color: color,\n    focused: focused\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"mappings":"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","names":["PlatformPressable","Link","useTheme","Color","React","LinkPressable","_ref","children","style","onPress","onLongPress","onPressIn","onPressOut","to","accessibilityRole","rest","Platform","OS","styles","button","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","undefined","View","DrawerItem","props","colors","icon","label","labelStyle","focused","allowFontScaling","activeTintColor","primary","inactiveTintColor","text","alpha","rgb","string","activeBackgroundColor","inactiveBackgroundColor","pressColor","pressOpacity","testID","accessibilityLabel","StyleSheet","flatten","borderRadius","color","backgroundColor","iconNode","size","collapsable","container","wrapper","accessibilityState","selected","Fragment","marginLeft","marginVertical","Text","numberOfLines","fontWeight","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex","display"],"sourceRoot":"../../src","sources":["DrawerItem.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}