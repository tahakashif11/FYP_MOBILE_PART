{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatBot = function ChatBot() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var appId = 'a24323a7';\n  var appKey = '3b739ac71bb4873ef3d6dff2f3c689b3\t';\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInput = _useState4[0],\n    setTextInput = _useState4[1];\n  var handleSend = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var query = textInput;\n      var response = yield axios.get(\"https://trackapi.nutritionix.com/v2/natural/nutrients?query=\" + query, {\n        headers: {\n          'Content-Type': 'application/json',\n          'x-app-id': appId,\n          'x-app-key': appKey,\n          'x-remote-user-id': '0'\n        }\n      });\n      var text = response.data.foods[0].food_name;\n      setData([].concat(_toConsumableArray(data), [{\n        type: 'user',\n        'text': textInput\n      }, {\n        type: 'bot',\n        'text': text\n      }]));\n      setTextInput('');\n    });\n    return function handleSend() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"ChatBot\"\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      style: styles.body,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            padding: 10\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: 'bold',\n              color: item.type === 'user' ? 'green' : 'red'\n            },\n            children: item.type === 'user' ? 'User: ' : 'Bot: '\n          }), _jsx(Text, {\n            style: styles.bot,\n            children: item.text\n          })]\n        });\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: textInput,\n      onChangeText: function onChangeText(text) {\n        return setTextInput(text);\n      },\n      placeholder: \"Ask me anything about food\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSend,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Send\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 70\n  },\n  body: {\n    backgroundColor: 'white',\n    width: '102%',\n    margin: 10\n  },\n  bot: {\n    fontSize: 16\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 10,\n    marginBottom: 10,\n    height: 60,\n    width: '90%'\n  },\n  button: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    backgroundColor: 'yellow',\n    width: '90%',\n    height: 60,\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'blue'\n  }\n});\nexport default ChatBot;","map":{"version":3,"names":["React","useState","axios","ChatBot","data","setData","appId","appKey","textInput","setTextInput","handleSend","query","response","get","headers","text","foods","food_name","type","styles","container","title","item","index","toString","body","flexDirection","padding","fontWeight","color","bot","input","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","marginBottom","marginTop","width","margin","borderWidth","borderColor","borderRadius","height"],"sources":["C:/reactag/newstart3/screens/ChatBot.js"],"sourcesContent":["import { StyleSheet, Text, View, FlatList, TextInput, TouchableOpacity } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [data, setData] = useState([]);\r\n  const appId = 'a24323a7';\r\n  const appKey = '3b739ac71bb4873ef3d6dff2f3c689b3\t';\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    const query = textInput;\r\n    const response = await axios.get(`https://trackapi.nutritionix.com/v2/natural/nutrients?query=${query}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-app-id': appId,\r\n        'x-app-key': appKey,\r\n        'x-remote-user-id': '0'\r\n      }\r\n    });\r\n    const text = response.data.foods[0].food_name;\r\n    setData([...data, { type: 'user', 'text': textInput }, { type: 'bot', 'text': text }]);\r\n    setTextInput('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>ChatBot</Text>\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        style={styles.body}\r\n        renderItem={({ item }) => (\r\n          <View style={{ flexDirection: 'row', padding: 10 }}>\r\n            <Text style={{ fontWeight: 'bold', color: item.type === 'user' ? 'green' : 'red' }}>{item.type === 'user' ? 'User: ' : 'Bot: '}</Text>\r\n            <Text style={styles.bot}>{item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={textInput}\r\n        onChangeText={text => setTextInput(text)}\r\n        placeholder=\"Ask me anything about food\"\r\n      />\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={handleSend}\r\n      >\r\n        <Text style={styles.buttonText}>Send</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    marginTop: 70\r\n  },\r\n  body: {\r\n    backgroundColor: 'white',\r\n    width: '102%',\r\n    margin: 10\r\n  },\r\n  bot: {\r\n    fontSize: 16,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'white',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    height: 60,\r\n    width: '90%'\r\n  },\r\n  button: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    backgroundColor: 'yellow',\r\n    width: '90%',\r\n    height: 60,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: 'blue'\r\n  }\r\n});\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}