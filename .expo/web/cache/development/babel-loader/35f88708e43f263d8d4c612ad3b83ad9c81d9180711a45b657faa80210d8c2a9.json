{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Camera } from 'expo-camera';\nimport * as Permissions from 'expo-permissions';\nimport { GLView } from 'expo-gl';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as THREE from 'three';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    cameraPermission = _useState2[0],\n    setCameraPermission = _useState2[1];\n  var _useState3 = useState(Camera.Constants.Type.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cameraType = _useState4[0],\n    setCameraType = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    model = _useState6[0],\n    setModel = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isModelReady = _useState8[0],\n    setIsModelReady = _useState8[1];\n  var glViewRef = useRef(null);\n  useEffect(function () {\n    function loadModel() {\n      return _loadModel.apply(this, arguments);\n    }\n    function _loadModel() {\n      _loadModel = _asyncToGenerator(function* () {\n        var model = yield posenet.load();\n        setModel(model);\n        setIsModelReady(true);\n      });\n      return _loadModel.apply(this, arguments);\n    }\n    loadModel();\n  }, []);\n  useEffect(function () {\n    function getPermission() {\n      return _getPermission.apply(this, arguments);\n    }\n    function _getPermission() {\n      _getPermission = _asyncToGenerator(function* () {\n        var _yield$Permissions$as = yield Permissions.askAsync(Permissions.CAMERA),\n          status = _yield$Permissions$as.status;\n        setCameraPermission(status === 'granted');\n      });\n      return _getPermission.apply(this, arguments);\n    }\n    getPermission();\n  }, []);\n  var onContextCreate = function () {\n    var _ref = _asyncToGenerator(function* (gl) {\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      var cameraTexture = yield ExpoTHREE.createCameraTextureAsync({\n        type: Camera.Constants.Type.back\n      });\n      var cameraFeed = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), new THREE.MeshBasicMaterial({\n        map: cameraTexture,\n        side: THREE.DoubleSide\n      }));\n      cameraFeed.position.z = -5;\n      var scene = new THREE.Scene();\n      scene.add(cameraFeed);\n      var animate = function animate() {\n        requestAnimationFrame(animate);\n        if (glViewRef.current) {\n          glViewRef.current.snapshotAsync().then(function (data) {\n            cameraTexture.update(data);\n          });\n        }\n        if (isModelReady) {\n          var pixels = gl.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE);\n          var input = tf.browser.fromPixels(pixels).resizeNearestNeighbor([model.inputResolution, model.inputResolution]);\n          var pose = model.estimateSinglePose(input, {\n            flipHorizontal: false\n          });\n          pose.keypoints.forEach(function (keypoint) {\n            if (keypoint.score >= 0.5) {\n              var _keypoint$position = keypoint.position,\n                y = _keypoint$position.y,\n                x = _keypoint$position.x;\n              var normalizedY = -(y / model.inputResolution) * 2 + 1;\n              var normalizedX = x / model.inputResolution * 2 - 1;\n              var circle = new THREE.Mesh(new THREE.CircleGeometry(0.05, 16), new THREE.MeshBasicMaterial({\n                color: 'red'\n              }));\n              circle.position.set(normalizedX, normalizedY, -4);\n              scene.add(circle);\n            }\n          });\n          input.dispose();\n        }\n        gl.endFrameEXP();\n      };\n      animate();\n    });\n    return function onContextCreate(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (cameraPermission === null) {\n    return _jsx(View, {});\n  }\n  if (cameraPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(GLView, {\n      style: {\n        flex: 1\n      },\n      onContextCreate: onContextCreate,\n      ref: glViewRef\n    }), _jsx(Camera, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      type: cameraType,\n      ratio: \"16:9\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Camera","Permissions","GLView","tf","posenet","THREE","App","cameraPermission","setCameraPermission","Constants","Type","back","cameraType","setCameraType","model","setModel","isModelReady","setIsModelReady","glViewRef","loadModel","load","getPermission","askAsync","CAMERA","status","onContextCreate","gl","viewport","drawingBufferWidth","drawingBufferHeight","cameraTexture","ExpoTHREE","createCameraTextureAsync","type","cameraFeed","Mesh","PlaneBufferGeometry","MeshBasicMaterial","map","side","DoubleSide","position","z","scene","Scene","add","animate","requestAnimationFrame","current","snapshotAsync","then","data","update","pixels","readPixels","RGBA","UNSIGNED_BYTE","input","browser","fromPixels","resizeNearestNeighbor","inputResolution","pose","estimateSinglePose","flipHorizontal","keypoints","forEach","keypoint","score","y","x","normalizedY","normalizedX","circle","CircleGeometry","color","set","dispose","endFrameEXP","flex","top","left","width","height","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent"],"sources":["C:/reactag/newstart3/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport * as Permissions from 'expo-permissions';\nimport { GLView } from 'expo-gl';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as THREE from 'three';\n\nexport default function App() {\n  const [cameraPermission, setCameraPermission] = useState(null);\n  const [cameraType, setCameraType] = useState(Camera.Constants.Type.back);\n  const [model, setModel] = useState(null);\n  const [isModelReady, setIsModelReady] = useState(false);\n  const glViewRef = useRef(null);\n\n  useEffect(() => {\n    async function loadModel() {\n      const model = await posenet.load();\n      setModel(model);\n      setIsModelReady(true);\n    }\n    loadModel();\n  }, []);\n\n  useEffect(() => {\n    async function getPermission() {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA);\n      setCameraPermission(status === 'granted');\n    }\n    getPermission();\n  }, []);\n\n  const onContextCreate = async (gl) => {\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    const cameraTexture = await ExpoTHREE.createCameraTextureAsync({\n      type: Camera.Constants.Type.back,\n    });\n\n    const cameraFeed = new THREE.Mesh(\n      new THREE.PlaneBufferGeometry(2, 2),\n      new THREE.MeshBasicMaterial({\n        map: cameraTexture,\n        side: THREE.DoubleSide,\n      })\n    );\n    cameraFeed.position.z = -5;\n\n    const scene = new THREE.Scene();\n    scene.add(cameraFeed);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (glViewRef.current) {\n        glViewRef.current.snapshotAsync().then((data) => {\n          cameraTexture.update(data);\n        });\n      }\n\n      if (isModelReady) {\n        const pixels = gl.readPixels(\n          0,\n          0,\n          gl.drawingBufferWidth,\n          gl.drawingBufferHeight,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE\n        );\n        const input = tf.browser.fromPixels(pixels).resizeNearestNeighbor([model.inputResolution, model.inputResolution]);\n        const pose =  model.estimateSinglePose(input, { flipHorizontal: false });\n\n        // Render pose keypoints on camera feed\n        pose.keypoints.forEach((keypoint) => {\n          if (keypoint.score >= 0.5) {\n            const { y, x } = keypoint.position;\n            const normalizedY = -(y / model.inputResolution) * 2 + 1;\n            const normalizedX = (x / model.inputResolution) * 2 - 1;\n            const circle = new THREE.Mesh(\n              new THREE.CircleGeometry(0.05, 16),\n              new THREE.MeshBasicMaterial({ color: 'red' })\n            );\n            circle.position.set(normalizedX, normalizedY, -4);\n            scene.add(circle);\n          }\n        });\n\n        input.dispose();\n      }\n\n      gl.endFrameEXP();\n    };\n    animate();\n  };\n\n  if (cameraPermission === null) {\n    return <View />;\n  }\n  if (cameraPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      <GLView\n        style={{ flex: 1 }}\n        onContextCreate={onContextCreate}\n        ref={glViewRef}\n      />\n\n      <Camera\n        style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\n        type={cameraType}\n        ratio=\"16:9\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}