{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activeProps\", \"swipeToDismiss\", \"useNativeDriver\", \"disabled\", \"renderContent\", \"renderHeader\", \"didOpen\", \"onOpen\", \"willClose\", \"onClose\", \"onLongPress\", \"onLayout\", \"springConfig\", \"backgroundColor\", \"underlayColor\", \"style\", \"dragDismissThreshold\", \"children\", \"modalProps\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useRef, useState, cloneElement, Children, isValidElement } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LightboxOverlay from \"./LightboxOverlay\";\nimport { useNextTick } from \"./hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar noop = function noop() {};\nvar Lightbox = function Lightbox(_ref) {\n  var activeProps = _ref.activeProps,\n    _ref$swipeToDismiss = _ref.swipeToDismiss,\n    swipeToDismiss = _ref$swipeToDismiss === void 0 ? true : _ref$swipeToDismiss,\n    _ref$useNativeDriver = _ref.useNativeDriver,\n    useNativeDriver = _ref$useNativeDriver === void 0 ? false : _ref$useNativeDriver,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    renderContent = _ref.renderContent,\n    renderHeader = _ref.renderHeader,\n    _ref$didOpen = _ref.didOpen,\n    didOpen = _ref$didOpen === void 0 ? noop : _ref$didOpen,\n    _ref$onOpen = _ref.onOpen,\n    onOpen = _ref$onOpen === void 0 ? noop : _ref$onOpen,\n    _ref$willClose = _ref.willClose,\n    willClose = _ref$willClose === void 0 ? noop : _ref$willClose,\n    _ref$onClose = _ref.onClose,\n    onClose = _ref$onClose === void 0 ? noop : _ref$onClose,\n    _ref$onLongPress = _ref.onLongPress,\n    onLongPress = _ref$onLongPress === void 0 ? noop : _ref$onLongPress,\n    _ref$onLayout = _ref.onLayout,\n    onLayout = _ref$onLayout === void 0 ? noop : _ref$onLayout,\n    _ref$springConfig = _ref.springConfig,\n    springConfig = _ref$springConfig === void 0 ? {\n      tension: 30,\n      friction: 7\n    } : _ref$springConfig,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? \"black\" : _ref$backgroundColor,\n    underlayColor = _ref.underlayColor,\n    style = _ref.style,\n    _ref$dragDismissThres = _ref.dragDismissThreshold,\n    dragDismissThreshold = _ref$dragDismissThres === void 0 ? 150 : _ref$dragDismissThres,\n    children = _ref.children,\n    _ref$modalProps = _ref.modalProps,\n    modalProps = _ref$modalProps === void 0 ? {} : _ref$modalProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var layoutOpacity = useRef(new Animated.Value(1));\n  var _root = useRef(null);\n  var closeNextTick = useNextTick(onClose);\n  var openNextTick = useNextTick(function () {\n    _root.current && layoutOpacity.current.setValue(0);\n  });\n  var _useState = useState({\n      isOpen: false,\n      origin: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    _useState2$ = _useState2[0],\n    isOpen = _useState2$.isOpen,\n    origin = _useState2$.origin,\n    setState = _useState2[1];\n  var getContent = function getContent() {\n    if (renderContent) return renderContent();else if (activeProps && isValidElement(children)) return cloneElement(Children.only(children), activeProps);\n    return children;\n  };\n  var handleOnClose = function handleOnClose() {\n    layoutOpacity.current.setValue(1);\n    setState(function (s) {\n      return _objectSpread(_objectSpread({}, s), {}, {\n        isOpen: false\n      });\n    });\n    closeNextTick();\n  };\n  var wrapMeasureWithCallback = function wrapMeasureWithCallback(callback) {\n    _root.current.measure(function (ox, oy, width, height, px, py) {\n      callback({\n        width: width,\n        height: height,\n        x: px,\n        y: py\n      });\n    });\n  };\n  var open = function open() {\n    if (!_root.current) return;\n    onOpen();\n    wrapMeasureWithCallback(function (newOrigin) {\n      setState(function (s) {\n        return _objectSpread(_objectSpread({}, s), {}, {\n          isOpen: true,\n          origin: _objectSpread({}, newOrigin)\n        });\n      });\n      openNextTick();\n    });\n  };\n  var getOverlayProps = function getOverlayProps() {\n    return _objectSpread({\n      isOpen: isOpen,\n      origin: origin,\n      renderHeader: renderHeader,\n      swipeToDismiss: swipeToDismiss,\n      springConfig: springConfig,\n      backgroundColor: backgroundColor,\n      children: getContent(),\n      didOpen: didOpen,\n      willClose: willClose,\n      onClose: handleOnClose,\n      useNativeDriver: useNativeDriver,\n      dragDismissThreshold: dragDismissThreshold,\n      modalProps: modalProps\n    }, rest);\n  };\n  return _jsxs(View, {\n    ref: _root,\n    style: style,\n    onLayout: onLayout,\n    children: [_jsx(Animated.View, {\n      style: {\n        opacity: layoutOpacity.current\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: underlayColor,\n        onPress: open,\n        onLongPress: onLongPress,\n        disabled: disabled,\n        children: children\n      })\n    }), disabled ? null : _jsx(LightboxOverlay, _objectSpread({}, getOverlayProps()))]\n  });\n};\nexport default Lightbox;","map":{"version":3,"names":["React","useRef","useState","cloneElement","Children","isValidElement","LightboxOverlay","useNextTick","noop","Lightbox","activeProps","swipeToDismiss","useNativeDriver","disabled","renderContent","renderHeader","didOpen","onOpen","willClose","onClose","onLongPress","onLayout","springConfig","tension","friction","backgroundColor","underlayColor","style","dragDismissThreshold","children","modalProps","rest","layoutOpacity","Animated","Value","_root","closeNextTick","openNextTick","current","setValue","isOpen","origin","x","y","width","height","setState","getContent","only","handleOnClose","s","wrapMeasureWithCallback","callback","measure","ox","oy","px","py","open","newOrigin","getOverlayProps","opacity"],"sources":["C:/reactag/newstart3/node_modules/react-native-lightbox-v2/dist/Lightbox.js"],"sourcesContent":["import React, { useRef, useState, cloneElement, Children, isValidElement, } from \"react\";\nimport { Animated, TouchableHighlight, View, } from \"react-native\";\nimport LightboxOverlay from \"./LightboxOverlay\";\nimport { useNextTick } from \"./hooks\";\nconst noop = () => { };\nconst Lightbox = ({ activeProps, swipeToDismiss = true, useNativeDriver = false, disabled = false, renderContent, renderHeader, didOpen = noop, onOpen = noop, willClose = noop, onClose = noop, onLongPress = noop, onLayout = noop, springConfig = { tension: 30, friction: 7 }, backgroundColor = \"black\", underlayColor, style, dragDismissThreshold = 150, children, modalProps = {}, ...rest }) => {\n    const layoutOpacity = useRef(new Animated.Value(1));\n    const _root = useRef(null);\n    const closeNextTick = useNextTick(onClose);\n    const openNextTick = useNextTick(() => {\n        _root.current && layoutOpacity.current.setValue(0);\n    });\n    const [{ isOpen, origin }, setState] = useState({\n        isOpen: false,\n        origin: { x: 0, y: 0, width: 0, height: 0 },\n    });\n    const getContent = () => {\n        if (renderContent)\n            return renderContent();\n        else if (activeProps && isValidElement(children))\n            return cloneElement(Children.only(children), activeProps);\n        return children;\n    };\n    const handleOnClose = () => {\n        layoutOpacity.current.setValue(1);\n        setState((s) => ({ ...s, isOpen: false }));\n        closeNextTick();\n    };\n    const wrapMeasureWithCallback = (callback) => {\n        _root.current.measure((ox, oy, width, height, px, py) => {\n            callback({ width, height, x: px, y: py });\n        });\n    };\n    const open = () => {\n        if (!_root.current)\n            return;\n        onOpen();\n        wrapMeasureWithCallback((newOrigin) => {\n            setState((s) => ({\n                ...s,\n                isOpen: true,\n                origin: { ...newOrigin },\n            }));\n            openNextTick();\n        });\n    };\n    const getOverlayProps = () => ({\n        isOpen,\n        origin,\n        renderHeader,\n        swipeToDismiss,\n        springConfig,\n        backgroundColor,\n        children: getContent(),\n        didOpen,\n        willClose,\n        onClose: handleOnClose,\n        useNativeDriver,\n        dragDismissThreshold,\n        modalProps,\n        ...rest,\n    });\n    return (<View ref={_root} style={style} onLayout={onLayout}>\n      <Animated.View style={{ opacity: layoutOpacity.current }}>\n        <TouchableHighlight underlayColor={underlayColor} onPress={open} onLongPress={onLongPress} disabled={disabled}>\n          {children}\n        </TouchableHighlight>\n      </Animated.View>\n      {disabled ? null : <LightboxOverlay {...getOverlayProps()}/>}\n    </View>);\n};\nexport default Lightbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}