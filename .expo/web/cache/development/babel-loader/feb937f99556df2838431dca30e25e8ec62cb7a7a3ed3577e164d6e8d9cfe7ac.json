{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatBot = function ChatBot() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var apiKey = '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';\n  var apiUrl = 'https://api.openai.com/v1/engines/text-davinci-002/completions';\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInput = _useState4[0],\n    setTextInput = _useState4[1];\n  var handlesen = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var prompt = textInput;\n      var response = yield axios.post(apiUrl, {\n        prompt: prompt,\n        max_tokens: 256,\n        temperature: 0.5,\n        top_p: 0.9,\n        n: 1,\n        presence_penalty: 0.6,\n        frequency_penalty: 0.6\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + apiKey\n        }\n      });\n      var text = response.data.choices[0].text.trim();\n      setData([].concat(_toConsumableArray(data), [{\n        type: 'user',\n        'text': textInput\n      }, {\n        type: 'bot',\n        'text': text\n      }]));\n      setTextInput('');\n    });\n    return function handlesen() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"ChatBot\"\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      style: styles.body,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          style: styles.chat,\n          children: _jsxs(Text, {\n            style: [styles.chatText, item.type === 'user' ? styles.userText : styles.botText],\n            children: [item.type === 'user' ? 'Taha:' : 'Bot:', \" \", item.text]\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: textInput,\n        onChangeText: function onChangeText(text) {\n          return setTextInput(text);\n        },\n        placeholder: \"Ask me Anything\",\n        placeholderTextColor: \"#BDBDBD\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handlesen,\n        disabled: !textInput,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Send\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginTop: 70,\n    marginBottom: 20\n  },\n  body: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: '#F5F5F5'\n  },\n  chat: {\n    alignSelf: 'flex-start',\n    backgroundColor: 'white',\n    padding: 8,\n    marginVertical: 6,\n    borderRadius: 10,\n    maxWidth: '80%'\n  },\n  chatText: {\n    fontSize: 16\n  },\n  userText: {\n    color: '#4CAF50',\n    fontWeight: 'bold'\n  },\n  botText: {\n    color: '#E91E63',\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderTopWidth: 1,\n    borderTopColor: '#D8D8D8'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#D8D8D8',\n    paddingHorizontal: 10,\n    marginRight: 10\n  },\n  button: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 20,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default ChatBot;","map":{"version":3,"names":["React","useState","axios","ChatBot","data","setData","apiKey","apiUrl","textInput","setTextInput","handlesen","prompt","response","post","max_tokens","temperature","top_p","n","presence_penalty","frequency_penalty","headers","text","choices","trim","type","styles","container","title","item","index","toString","body","chat","chatText","userText","botText","inputContainer","input","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","fontWeight","marginTop","marginBottom","width","alignSelf","padding","marginVertical","borderRadius","maxWidth","color","flexDirection","justifyContent","paddingHorizontal","paddingVertical","borderTopWidth","borderTopColor","height","borderWidth","borderColor","marginRight"],"sources":["C:/reactag/newstart3/screens/ChatBot.js"],"sourcesContent":["import { StyleSheet, Text, View, FlatList, TextInput, TouchableOpacity } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [data, setData] = useState([]);\r\n  const apiKey = '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';\r\n  const apiUrl = 'https://api.openai.com/v1/engines/text-davinci-002/completions';\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n  const handlesen = async () => {\r\n    const prompt = textInput;\r\n    const response = await axios.post(apiUrl, {\r\n      prompt: prompt,\r\n      max_tokens: 256,\r\n      temperature: 0.5,\r\n      top_p: 0.9,\r\n      n: 1,\r\n      presence_penalty: 0.6,\r\n      frequency_penalty: 0.6,\r\n\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${apiKey}`\r\n      }\r\n    });\r\n\r\n    const text = response.data.choices[0].text.trim();\r\n    setData([...data, { type: 'user', 'text': textInput }, { type: 'bot', 'text': text }]);\r\n    setTextInput('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>ChatBot</Text>\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        style={styles.body}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.chat}>\r\n            <Text style={[styles.chatText, item.type === 'user' ? styles.userText : styles.botText]}>{item.type === 'user' ? 'Taha:' : 'Bot:'} {item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={textInput}\r\n          onChangeText={text => setTextInput(text)}\r\n          placeholder=\"Ask me Anything\"\r\n          placeholderTextColor=\"#BDBDBD\"\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handlesen}\r\n          disabled={!textInput}\r\n        >\r\n          <Text style={styles.buttonText}>Send</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginTop: 70,\r\n    marginBottom: 20\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    width: '100%',\r\n    backgroundColor: '#F5F5F5'\r\n  },\r\n  chat: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: 'white',\r\n    padding: 8,\r\n    marginVertical: 6,\r\n    borderRadius: 10,\r\n    maxWidth: '80%',\r\n  },\r\n  chatText: {\r\n    fontSize: 16,\r\n  },\r\n  userText: {\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  botText: {\r\n    color: '#E91E63',\r\n    fontWeight: 'bold',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: \r\n    '#FFFFFF',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#D8D8D8',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: '#D8D8D8',\r\n    paddingHorizontal: 10,\r\n    marginRight: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    borderRadius: 20,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\nexport default ChatBot;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}