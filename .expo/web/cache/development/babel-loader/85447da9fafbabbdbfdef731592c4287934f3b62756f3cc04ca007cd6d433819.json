{"ast":null,"code":"import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport logout from \"./screens/logout\";\nimport WorkoutScreen from \"./screens/WorkoutScreen\";\nimport FitScreen from \"./screens/FitScreen\";\nimport RestScreen from \"./screens/RestScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    children: [_jsx(Drawer.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Drawer.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"logout\",\n      component: logout\n    }), _jsx(Drawer.Screen, {\n      name: \"Workout\",\n      component: WorkoutScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Fit\",\n      component: FitScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Rest\",\n      component: RestScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"MyDashboard\",\n        component: MyDrawer\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","createDrawerNavigator","NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","logout","WorkoutScreen","FitScreen","RestScreen","Stack","Drawer","MyDrawer","headerShown","App","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/reactag/newstart3/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport logout from './screens/logout';\nimport WorkoutScreen from \"./screens/WorkoutScreen\";\nimport FitScreen from \"./screens/FitScreen\";\nimport RestScreen from \"./screens/RestScreen\";\n\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator >\n      <Drawer.Screen options={{ headerShown: false }}  name=\"Home\" component={HomeScreen} />\n      <Drawer.Screen options={{ headerShown: false }} name=\"logout\" component={logout} />\n      <Drawer.Screen name=\"Workout\" component={WorkoutScreen} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Fit\" component={FitScreen} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Rest\" component={RestScreen} options={{ headerShown: false }} />\n      \n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={LoginScreen} />\n        <Stack.Screen options={{ headerShown: false }} name=\"MyDashboard\" component={MyDrawer} />\n       \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":"AAAA,OAAO,8BAA8B;AACrC,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAEjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AACb,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,OAAOC,UAAU;AAA6B;AAAA;AAG9C,IAAMC,KAAK,GAAGP,0BAA0B,EAAE;AAC1C,IAAMQ,MAAM,GAAGV,qBAAqB,EAAE;AAGtC,SAASW,QAAQ,GAAG;EAClB,OACE,MAAC,MAAM,CAAC,SAAS;IAAA,WACf,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAE,IAAI,EAAC,MAAM;MAAC,SAAS,EAAER;IAAW,EAAG,EACtF,KAAC,MAAM,CAAC,MAAM;MAAC,OAAO,EAAE;QAAEQ,WAAW,EAAE;MAAM,CAAE;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEP;IAAO,EAAG,EACnF,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEC,aAAc;MAAC,OAAO,EAAE;QAAEM,WAAW,EAAE;MAAM;IAAE,EAAG,EAC3F,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,KAAK;MAAC,SAAS,EAAEL,SAAU;MAAC,OAAO,EAAE;QAAEK,WAAW,EAAE;MAAM;IAAE,EAAG,EACnF,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEJ,UAAW;MAAC,OAAO,EAAE;QAAEI,WAAW,EAAE;MAAM;IAAE,EAAG;EAAA,EAEpE;AAEvB;AAEA,eAAe,SAASC,GAAG,GAAG;EAC5B,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAA,WACd,KAAC,KAAK,CAAC,MAAM;QAAC,OAAO,EAAE;UAAED,WAAW,EAAE;QAAM,CAAE;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAET;MAAY,EAAG,EACtF,KAAC,KAAK,CAAC,MAAM;QAAC,OAAO,EAAE;UAAES,WAAW,EAAE;QAAM,CAAE;QAAC,IAAI,EAAC,aAAa;QAAC,SAAS,EAAED;MAAS,EAAG;IAAA;EAEzE,EACE;AAE1B;AAEA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}