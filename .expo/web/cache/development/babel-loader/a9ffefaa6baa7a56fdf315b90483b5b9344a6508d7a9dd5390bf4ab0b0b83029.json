{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerItemList, createDrawerNavigator } from '@react-navigation/drawer';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Logout from \"./screens/Logout\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nimport ChatBot from \"./screens/ChatBot\";\nimport Chat from \"./screens/Chat\";\nimport Maps from \"./screens/Maps\";\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport Home from \"./Home\";\nimport Settings from \"./screens/Settings\";\nimport Cart from \"./Cart\";\nimport Modeel from \"./Modeel\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction toogle() {\n  return _jsx(View, {\n    children: _jsx(Switch, {})\n  });\n}\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsxs(View, {\n        style: styles.drawerContent,\n        children: [_jsx(View, {\n          style: styles.drawerHeader,\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"dumbbell\",\n            size: 40,\n            color: \"black\"\n          })\n        }), _jsx(DrawerItemList, _objectSpread({}, props))]\n      });\n    },\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        drawerIcon: function drawerIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-home' : 'ios-home-outline';\n          } else if (route.name === 'ChatBot') {\n            iconName = focused ? 'ios-chatbox' : 'ios-chatbox-outline';\n          } else if (route.name === 'ChatScreen') {\n            iconName = focused ? 'ios-chatbubble' : 'ios-chatbubble-outline';\n          } else if (route.name === 'Map') {\n            iconName = focused ? 'ios-map' : 'ios-map-outline';\n          } else if (route.name === 'Logout') {\n            iconName = focused ? 'ios-log-out' : 'ios-log-out-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-settings' : 'ios-settings';\n          } else if (route.name === 'Cart') {\n            iconName = focused ? 'ios-cart' : 'ios-cart';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    drawerContentOptions: {\n      activeTintColor: '#FFF',\n      inactiveTintColor: '#999',\n      itemStyle: {\n        marginVertical: 5\n      },\n      labelStyle: {\n        fontSize: 16\n      },\n      style: {\n        backgroundColor: '#4a4a4a'\n      }\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"ChatBot\",\n      component: ChatBot,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"ChatScreen\",\n      component: Chat,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Map\",\n      component: Maps,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Logout\",\n      component: Logout,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Settings\",\n      component: Settings,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Cart\",\n      component: Cart,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"toggle\",\n      component: toogle,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"MyDashboard\",\n        component: MyDrawer\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1\n  },\n  drawerHeader: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    paddingLeft: 110,\n    backgroundColor: 'white',\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16,\n    color: '#fff'\n  },\n  drawerSection: {\n    marginTop: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 2\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"names":["StatusBar","React","DrawerItemList","createDrawerNavigator","NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","Logout","Stack","Drawer","ChatBot","Chat","Maps","MaterialCommunityIcons","Ionicons","Home","Settings","Cart","Modeel","toogle","MyDrawer","props","styles","drawerContent","drawerHeader","route","drawerIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","itemStyle","marginVertical","labelStyle","fontSize","style","backgroundColor","headerShown","App","StyleSheet","create","flex","paddingTop","paddingBottom","paddingLeft","flexDirection","title","drawerSection","marginTop","borderTopColor","borderTopWidth","bottomDrawerSection","marginBottom","preference","justifyContent","paddingVertical","paddingHorizontal"],"sources":["C:/reactag/newstart3/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport {DrawerItemList , createDrawerNavigator } from '@react-navigation/drawer';\nimport { StyleSheet, Text, View, Image,Switch } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport Logout from './screens/Logout';\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\nimport ChatBot from './screens/ChatBot';\nimport Chat from './screens/Chat';\nimport Maps from './screens/Maps';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport Home from './Home';\nimport Settings from './screens/Settings';\n\nimport Cart from './Cart';\nimport Modeel from './Modeel';\n\n\nfunction toogle() {\n  return (\n    <View>\n      <Switch />\n    </View>\n  )\n}\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator\n      drawerContent={(props) => (\n        <View style={styles.drawerContent}>\n          <View style={styles.drawerHeader}>\n            <MaterialCommunityIcons\n              name=\"dumbbell\"\n              size={40}\n              color=\"black\"\n              \n            />\n            \n          </View>\n          <DrawerItemList {...props} />\n        </View>\n      )}\n      screenOptions={({ route }) => ({\n        drawerIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-home' : 'ios-home-outline';\n          } else if (route.name === 'ChatBot') {\n            iconName = focused ? 'ios-chatbox' : 'ios-chatbox-outline';\n          } else if (route.name === 'ChatScreen') {\n            iconName = focused ? 'ios-chatbubble' : 'ios-chatbubble-outline';\n          } else if (route.name === 'Map') {\n            iconName = focused ? 'ios-map' : 'ios-map-outline';\n          } else if (route.name === 'Logout') {\n            \n            iconName = focused ? 'ios-log-out' : 'ios-log-out-outline';\n          }\n          else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-settings' : 'ios-settings';\n          }\n          else if (route.name === 'Cart') {\n            iconName = focused ? 'ios-cart' : 'ios-cart';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n      })}\n      drawerContentOptions={{\n        activeTintColor: '#FFF',\n        inactiveTintColor: '#999',\n        itemStyle: { marginVertical: 5 },\n        labelStyle: { fontSize: 16 },\n        style: { backgroundColor: '#4a4a4a' },\n      }}\n    >\n      <Drawer.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"ChatBot\" component={ChatBot} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"ChatScreen\" component={Chat} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Map\" component={Maps} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Logout\" component={Logout} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Settings\" component={Settings} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"Cart\" component={Cart} options={{ headerShown: false }} />\n      <Drawer.Screen name=\"toggle\" component={toogle} options={{ headerShown: false }} />\n     \n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={LoginScreen} />\n        <Stack.Screen options={{ headerShown: false }} name=\"MyDashboard\" component={MyDrawer} />\n        \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n    \n  },\n  drawerHeader: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    paddingLeft: 110,\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    \n  },\n  title: {\n    fontSize: 16,\n    color: '#fff',\n  },\n  drawerSection: {\n    marginTop: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 2,\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}