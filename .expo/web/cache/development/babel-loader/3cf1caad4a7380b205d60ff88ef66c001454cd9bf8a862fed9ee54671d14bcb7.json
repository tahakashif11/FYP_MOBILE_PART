{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatBot = function ChatBot() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputMessage = _useState4[0],\n    setInputMessage = _useState4[1];\n  var apiKey = 'YOUR_API_KEY_HERE';\n  var apiUrl = 'https://api.openai.com/v1/engines/davinci-codex/completions';\n  var handleSend = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (inputMessage) {\n        setMessages([].concat(_toConsumableArray(messages), [{\n          text: inputMessage,\n          sender: 'user'\n        }]));\n        var prompt = inputMessage.trim();\n        setInputMessage('');\n        try {\n          var response = yield axios.post(apiUrl, {\n            prompt: prompt,\n            max_tokens: 1024,\n            temperature: 0.5,\n            stop: '\\n'\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \" + apiKey\n            }\n          });\n          var botMessage = response.data.choices[0].text.trim();\n          setMessages([].concat(_toConsumableArray(messages), [{\n            text: botMessage,\n            sender: 'bot'\n          }]));\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleSend() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"ChatBot\"\n    }), _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          style: [styles.messageContainer, {\n            alignSelf: item.sender === 'bot' ? 'flex-start' : 'flex-end'\n          }],\n          children: _jsx(Text, {\n            style: [styles.messageText, {\n              backgroundColor: item.sender === 'bot' ? 'lightgrey' : '#7ec8e3'\n            }],\n            children: item.text\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: inputMessage,\n        onChangeText: setInputMessage,\n        onSubmitEditing: handleSend,\n        placeholder: \"Type a message...\"\n      }), _jsx(Button, {\n        title: \"Send\",\n        onPress: handleSend\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 70\n  },\n  messageContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  messageText: {\n    padding: 10,\n    borderRadius: 5,\n    maxWidth: '80%',\n    overflow: 'hidden'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10\n  }\n});\nexport default ChatBot;\n'sk - 3GedrgP9w0eaYkHIpTHtT3BlbkFJRAL2dUpi6KUxDTGb87OJ';","map":{"version":3,"names":["React","useState","axios","ChatBot","messages","setMessages","inputMessage","setInputMessage","apiKey","apiUrl","handleSend","text","sender","prompt","trim","response","post","max_tokens","temperature","stop","headers","botMessage","data","choices","error","console","styles","container","title","item","index","toString","messageContainer","alignSelf","messageText","backgroundColor","inputContainer","input","StyleSheet","create","flex","padding","fontSize","fontWeight","marginBottom","marginTop","flexDirection","borderRadius","maxWidth","overflow","alignItems","borderWidth","borderColor","marginRight"],"sources":["C:/reactag/newstart3/screens/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, FlatList, Keyboard } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n\r\n  const apiKey = 'YOUR_API_KEY_HERE'; // replace with your OpenAI API key\r\n  const apiUrl = 'https://api.openai.com/v1/engines/davinci-codex/completions';\r\n\r\n  const handleSend = async () => {\r\n    if (inputMessage) {\r\n      setMessages([...messages, { text: inputMessage, sender: 'user' }]);\r\n      const prompt = inputMessage.trim();\r\n      setInputMessage('');\r\n\r\n      try {\r\n        const response = await axios.post(apiUrl, {\r\n          prompt: prompt,\r\n          max_tokens: 1024,\r\n          temperature: 0.5,\r\n          stop: '\\n',\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`,\r\n          },\r\n        });\r\n        const botMessage = response.data.choices[0].text.trim();\r\n        setMessages([...messages, { text: botMessage, sender: 'bot' }]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>ChatBot</Text>\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={[styles.messageContainer, { alignSelf: item.sender === 'bot' ? 'flex-start' : 'flex-end' }]}>\r\n            <Text style={[styles.messageText, { backgroundColor: item.sender === 'bot' ? 'lightgrey' : '#7ec8e3' }]}>\r\n              {item.text}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={inputMessage}\r\n          onChangeText={setInputMessage}\r\n          onSubmitEditing={handleSend}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <Button title=\"Send\" onPress={handleSend} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    marginTop: 70,\r\n  },\r\n  messageContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n  },\r\n  messageText: {\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    maxWidth: '80%',\r\n    overflow: 'hidden',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: 'lightgrey',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default ChatBot;\r\n\r\n'sk - 3GedrgP9w0eaYkHIpTHtT3BlbkFJRAL2dUpi6KUxDTGb87OJ'"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}