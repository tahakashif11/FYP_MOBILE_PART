{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var navigation = useNavigation();\n  return React.createElement(PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), React.createElement(Image, {\n    style: [styles.icon, tintColor ? {\n      tintColor: tintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAY9B,eAAe,SAASC,kBAAkB,OAAgC;EAAA,IAA7BC,SAAS,GAAkBC,KAA3BD,SAAS;IAAKE,gCAAaD;EACtE,IAAME,UAAU,GAAGN,aAAa,EAAuC;EAEvE,OACEC,oBAACH,iBAAiB,eACZO,IAAI;IACRE,UAAU;IACVC,iBAAiB,EAAC,QAAQ;IAC1BC,cAAc,EAAE;MAAEC,UAAU,EAAE;IAAK,CAAE;IACrCC,OAAO,EAAE;MAAA,OAAML,UAAU,CAACM,QAAQ,CAACb,aAAa,CAACc,YAAY,EAAE,CAAE;IAAA;IACjEC,KAAK,EAAEC,MAAM,CAACC,SAAU;IACxBC,OAAO,EAAEC,QAAQ,CAACC,MAAM,CAAC;MACvBC,GAAG,EAAEC,SAAS;MACdC,OAAO,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG;IACtD,CAAC;EAAE,IAEHzB,oBAAC0B,KAAK;IACJb,KAAK,EAAE,CAACC,MAAM,CAACa,IAAI,EAAEzB,SAAS,GAAG;MAAEA;IAAU,CAAC,GAAG,IAAI,CAAE;IACvD0B,MAAM,EAAEC,OAAO,mCAAoC;IACnDC,YAAY,EAAE;EAAE,EAChB,CACgB;AAExB;AAEA,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAM,CAAC;EAC/BL,IAAI,EAAE;IACJM,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE;EACd,CAAC;EACDrB,SAAS,EAAE;IACTsB,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC","names":["PlatformPressable","DrawerActions","useNavigation","React","DrawerToggleButton","tintColor","_ref","rest","navigation","accessible","accessibilityRole","android_ripple","borderless","onPress","dispatch","toggleDrawer","style","styles","touchable","hitSlop","Platform","select","ios","undefined","default","top","right","bottom","left","Image","icon","source","require","fadeDuration","StyleSheet","create","height","width","margin","resizeMode","marginHorizontal"],"sources":["DrawerToggleButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}